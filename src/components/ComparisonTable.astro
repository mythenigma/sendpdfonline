---
interface Props {
    headers: string[];
    rows: Array<{
        feature: string;
        values: Array<string | boolean>;
    }>;
}

const { headers, rows } = Astro.props;
---

<table class="comparison-table">
    <thead>
        <tr>
            <th>Feature</th>
            {headers.map((header) => (
                <th>{header}</th>
            ))}
        </tr>
    </thead>
    <tbody>
        {rows.map((row) => (
            <tr>
                <td>{row.feature}</td>
                {row.values.map((value) => (
                    <td>
                        {typeof value === 'boolean' ? (
                            value ? (
                                <span class="checkmark">✓</span>
                            ) : (
                                <span class="x-mark">✗</span>
                            )
                        ) : (
                            value
                        )}
                    </td>
                ))}
            </tr>
        ))}
    </tbody>
</table>

<style>
    .comparison-table {
        width: 100%;
        border-collapse: collapse;
        margin: 1.5rem 0;
    }

    .comparison-table th,
    .comparison-table td {
        padding: 1rem;
        text-align: left;
        border-bottom: 1px solid var(--border-color);
    }

    .comparison-table th {
        background-color: var(--light-background);
        font-weight: bold;
    }

    .checkmark {
        color: var(--success-color);
        font-weight: bold;
    }

    .x-mark {
        color: var(--error-color);
        font-weight: bold;
    }
</style> 